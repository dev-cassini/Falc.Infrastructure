version: "3.5"

services:
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    networks:
      - falc
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 60s
  
  rmq:
    container_name: rmq
    image: rabbitmq:4.0-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - falc
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rmq.rule=Host(`rmq.falc.local`)"
      - "traefik.http.routers.rmq.tls=true"
      - "traefik.http.services.rmq.loadbalancer.server.port=15672"
      - "traefik.tags=falc"
      - "traefik.docker.network=falc"
  
  traefik:
    container_name: traefik
    image: traefik:v3.2
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Map the static configuration into the container
      - ./traefik-static.yml:/etc/traefik/traefik.yml:ro
      # Map the dynamic configuration into the container
      - ./traefik-dynamic.yml:/etc/traefik/dynamic.yml:ro
      # Map the certificats into the container
      - ./certs:/etc/certs:ro
    networks:
      falc:
        aliases:
          - sts.falc.local
          - admin.falc.local
          - admin-api.falc.local
          - rmq.falc.local

networks:
  falc:
    external: true